package com.asn.mensa.test.entities;
// Generated 14 Jun 14 7:23:22 by Hibernate Tools 3.2.1.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Doctor generated by hbm2java
 */
@Entity
@Table(name = "doctor")
public class Doctor implements java.io.Serializable {

    private Integer id;
    private String nama;
    private Integer npaId;
    private String spesialis;
    private Set<Skp> skps = new HashSet<Skp>(0);

    public Doctor() {
    }

    public Doctor(String nama, Integer npaId, String spesialis) {
        this.nama = nama;
        this.npaId = npaId;
        this.spesialis = spesialis;
    }

    public Doctor(String nama, Integer npaId, String spesialis, Set<Skp> skps) {
        this.nama = nama;
        this.npaId = npaId;
        this.spesialis = spesialis;
        this.skps = skps;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "nama", nullable = false, length = 100)
    public String getNama() {
        return this.nama;
    }

    public void setNama(String nama) {
        this.nama = nama;
    }

    @Column(name = "npa_id", nullable = false)
    public Integer getNpaId() {
        return this.npaId;
    }

    public void setNpaId(Integer npaId) {
        this.npaId = npaId;
    }

    @Column(name = "spesialis", nullable = false, length = 100)
    public String getSpesialis() {
        return this.spesialis;
    }

    public void setSpesialis(String spesialis) {
        this.spesialis = spesialis;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "doctor")
    public Set<Skp> getSkps() {
        return this.skps;
    }

    public void setSkps(Set<Skp> skps) {
        this.skps = skps;
    }
}
